(* From "Dynamic Power management" case study *)

(*********************************)
structure
(*********************************)

state s_on_0_0:
	s_on [c_on_on][pas_de_perte]
		-> (1 * 0.95 * 1) s_on_0_0;
		-> (1 * 0.95 * 0) s_on_0_1;
		-> (1 * 0.05 * 1) s_on_1_0;
		-> (1 * 0.05 * 0) s_on_1_1;
		-> (0) s_off_0_0;
		-> (0) s_off_0_1;
		-> (0) s_off_1_0;
		-> (0) s_off_1_1;

	s_off [c_on_off][pas_de_perte]
		-> (0.8 * 0.95 * 1) s_on_0_0;
		-> (0.8 * 0.95 * 0) s_on_0_1;
		-> (0.8 * 0.05 * 1) s_on_1_0;
		-> (0.8 * 0.05 * 0) s_on_1_1;
		-> (0.2 * 0.95 * 1) s_off_0_0;
		-> (0.2 * 0.95 * 0) s_off_0_1;
		-> (0.2 * 0.05 * 1) s_off_1_0;
		-> (0.2 * 0.95 * 0) s_off_1_1;


state s_on_0_1:
	s_on [c_on_on][pas_de_perte]
		-> (1 * 0.95 * 0.8) s_on_0_0;
		-> (1 * 0.95 * 0.2) s_on_0_1;
		-> (1 * 0.05 * 0.8) s_on_1_0;
		-> (1 * 0.05 * 0.2) s_on_1_1;
		-> (0 * 0.95 * 0.8) s_off_0_0;
		-> (0 * 0.95 * 0.2) s_off_0_1;
		-> (0 * 0.05 * 0.8) s_off_1_0;
		-> (0 * 0.05 * 0.2) s_off_1_1;

	s_off [c_on_off][pas_de_perte]
		-> (0.8 * 0.95 * 0) s_on_0_0;
		-> (0.8 * 0.95 * 1) s_on_0_1;
		-> (0.8 * 0.05 * 0) s_on_1_0;
		-> (0.8 * 0.05 * 1) s_on_1_1;
		-> (0.2 * 0.95 * 0) s_off_0_0;
		-> (0.2 * 0.95 * 1) s_off_0_1;
		-> (0.2 * 0.05 * 0) s_off_1_0;
		-> (0.2 * 0.05 * 1) s_off_1_1;
		

state s_on_1_0:
	s_on [c_on_on][pas_de_perte]
		-> (1 * 0.15 * 0.8) s_on_0_0;
		-> (1 * 0.15 * 0.2) s_on_0_1;
		-> (1 * 0.85 * 0.8) s_on_1_0;
		-> (1 * 0.85 * 0.2) s_on_1_1;
		-> (0 * 0.15 * 0.8) s_off_0_0;
		-> (0 * 0.15 * 0.2) s_off_0_1;
		-> (0 * 0.85 * 0.8) s_off_1_0;
		-> (0 * 0.85 * 0.2) s_off_1_1;

	s_off [c_on_off][pas_de_perte]
		-> (0.8 * 0.15 * 0) s_on_0_0;
		-> (0.8 * 0.15 * 1) s_on_0_1;
		-> (0.8 * 0.85 * 0) s_on_1_0;
		-> (0.8 * 0.85 * 1) s_on_1_1;
		-> (0.2 * 0.15 * 0) s_off_0_0;
		-> (0.2 * 0.15 * 1) s_off_0_1;
		-> (0.2 * 0.85 * 0) s_off_1_0;
		-> (0.2 * 0.85 * 1) s_off_1_1;
		
		
state s_on_1_1:
	s_on [c_on_on][perte]
		-> (1 * 0.15 * 0) s_on_0_0;
		-> (1 * 0.15 * 1) s_on_0_1;
		-> (1 * 0.85 * 0) s_on_1_0;
		-> (1 * 0.85 * 1) s_on_1_1;
		-> (0 * 0.15 * 0) s_off_0_0;
		-> (0 * 0.15 * 1) s_off_0_1;
		-> (0 * 0.85 * 0) s_off_1_0;
		-> (0 * 0.85 * 1) s_off_1_1;

	s_off [c_on_off][pas_de_perte]
		-> (0.8 * 0.15 * 0) s_on_0_0;
		-> (0.8 * 0.15 * 1) s_on_0_1;
		-> (0.8 * 0.85 * 0) s_on_1_0;
		-> (0.8 * 0.85 * 1) s_on_1_1;
		-> (0.2 * 0.15 * 0) s_off_0_0;
		-> (0.2 * 0.15 * 1) s_off_0_1;
		-> (0.2 * 0.85 * 0) s_off_1_0;
		-> (0.2 * 0.85 * 1) s_off_1_1;
		
		
state s_off_0_0:
	s_on [c_off_on][pas_de_perte]
		-> (0.1 * 0.95 * 1) s_on_0_0;
		-> (0.1 * 0.95 * 0) s_on_0_1;
		-> (0.1 * 0.05 * 1) s_on_1_0;
		-> (0.1 * 0.05 * 0) s_on_1_1;
		-> (0.9 * 0.95 * 1) s_off_0_0;
		-> (0.9 * 0.95 * 0) s_off_0_1;
		-> (0.9 * 0.05 * 1) s_off_1_0;
		-> (0.9 * 0.05 * 0) s_off_1_1;

	s_off [c_off_off][pas_de_perte]
		-> (0 * 0.95 * 1) s_on_0_0;
		-> (0 * 0.95 * 0) s_on_0_1;
		-> (0 * 0.05 * 1) s_on_1_0;
		-> (0 * 0.05 * 0) s_on_1_1;
		-> (1 * 0.95 * 1) s_off_0_0;
		-> (1 * 0.95 * 0) s_off_0_1;
		-> (1 * 0.05 * 1) s_off_1_0;
		-> (1 * 0.05 * 0) s_off_1_1;


state s_off_0_1:
	s_on [c_off_on][pas_de_perte]
		-> (0.1 * 0.95 * 0) s_on_0_0;
		-> (0.1 * 0.95 * 1) s_on_0_1;
		-> (0.1 * 0.05 * 0) s_on_1_0;
		-> (0.1 * 0.05 * 1) s_on_1_1;
		-> (0.9 * 0.95 * 0) s_off_0_0;
		-> (0.9 * 0.95 * 1) s_off_0_1;
		-> (0.9 * 0.05 * 0) s_off_1_0;
		-> (0.9 * 0.05 * 1) s_off_1_1;

	s_off [c_off_off][pas_de_perte]
		-> (0 * 0.95 * 0) s_on_0_0;
		-> (0 * 0.95 * 1) s_on_0_1;
		-> (0 * 0.05 * 0) s_on_1_0;
		-> (0 * 0.05 * 1) s_on_1_1;
		-> (1 * 0.95 * 0) s_off_0_0;
		-> (1 * 0.95 * 1) s_off_0_1;
		-> (1 * 0.05 * 0) s_off_1_0;
		-> (1 * 0.05 * 1) s_off_1_1;


state s_off_1_0:
	s_on [c_off_on][pas_de_perte]
		-> (0.1 * 0.15 * 0) s_on_0_0;
		-> (0.1 * 0.15 * 1) s_on_0_1;
		-> (0.1 * 0.85 * 0) s_on_1_0;
		-> (0.1 * 0.85 * 1) s_on_1_1;
		-> (0.9 * 0.15 * 0) s_off_0_0;
		-> (0.9 * 0.15 * 1) s_off_0_1;
		-> (0.9 * 0.85 * 0) s_off_1_0;
		-> (0.9 * 0.85 * 1) s_off_1_1;

	s_off [c_off_off][pas_de_perte]
		-> (0 * 0.15 * 0) s_on_0_0;
		-> (0 * 0.15 * 1) s_on_0_1;
		-> (0 * 0.85 * 0) s_on_1_0;
		-> (0 * 0.85 * 1) s_on_1_1;
		-> (1 * 0.15 * 0) s_off_0_0;
		-> (1 * 0.15 * 1) s_off_0_1;
		-> (1 * 0.85 * 0) s_off_1_0;
		-> (1 * 0.85 * 1) s_off_1_1;


state s_off_1_1:
	s_on [c_off_on][perte]
		-> (0.1 * 0.15 * 0) s_on_0_0;
		-> (0.1 * 0.15 * 1) s_on_0_1;
		-> (0.1 * 0.85 * 0) s_on_1_0;
		-> (0.1 * 0.85 * 1) s_on_1_1;
		-> (0.9 * 0.15 * 0) s_off_0_0;
		-> (0.9 * 0.15 * 1) s_off_0_1;
		-> (0.9 * 0.85 * 0) s_off_1_0;
		-> (0.9 * 0.85 * 1) s_off_1_1;

	s_off [c_off_off][pas_de_perte]
		-> (0 * 0.15 * 0) s_on_0_0;
		-> (0 * 0.15 * 1) s_on_0_1;
		-> (0 * 0.85 * 0) s_on_1_0;
		-> (0 * 0.85 * 1) s_on_1_1;
		-> (1 * 0.15 * 0) s_off_0_0;
		-> (1 * 0.15 * 1) s_off_0_1;
		-> (1 * 0.85 * 0) s_off_1_0;
		-> (1 * 0.85 * 1) s_off_1_1;

(*********************************)
costs
(*********************************)
& c_on_on   = 3
& c_on_off  = 4
& c_off_on  = 4
& c_off_off = 0

& pas_de_perte   = 0
& perte  = 1000


(*********************************)
(**beta = 99999/100000*)
(*********************************)
